/* ----------------------------------------------------------------------------------------------------------------- */
/* ----------------------------------------------------------------------------------------------------------------- */
/* ----------------------------------------------------------------------------------------------------------------- */

@import "../node_modules/bootstrap/scss/bootstrap";
@import "../node_modules/bootstrap/scss/functions";
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/mixins";

// https://getbootstrap.com/docs/5.0/utilities/colors/
// main data
$gm_primary_font_color: whitesmoke;
$gm_background: $gray-900;
$gm_background_hover_row: rgb(44, 44, 44);
$gm_background_hover_col: lighten($gray-900,5%);
$gm_table_border: $secondary;
$gm_inactive_cells: $gray-600;

// main colors
$gm_c_black: black;
$gm_c_bright_white: white;
$gm_c_bright_black: grey;
$gm_c_red: red;
$gm_c_green: rgb(0, 255, 0);
$gm_c_cyan: cyan;
$gm_c_yellow: yellow;
$gm_c_bright_yellow: rgb(255, 220, 65);
$gm_c_light_steel_blue: rgb(175,175,255);
$gm_c_silver: silver;

$gm_level: 	desaturate(rgb(255,135,0), 30%);

// hp
$gm_hp_overheal: $gm_c_cyan;
$gm_hp_good: $gm_c_green;
$gm_hp_hurt: $gm_c_yellow;
$gm_hp_bad: $gm_c_red;
$gm_hp_normal: $gm_c_bright_black;

// money
$gm_money_cp: rgb(230, 162, 99);
$gm_money_sp: silver;
$gm_money_gp: gold;
$gm_money_ep: rgb(95, 201, 209);
$gm_money_pp: rgb(98, 171, 255);

.table>tbody>tr>td, 
.table>tbody>tr>th, 
.table>tfoot>tr>td, 
.table>tfoot>tr>th, 
.table>thead>tr>td, 
.table>thead>tr>th {
    padding: 5;
    margin: 0;
}

$font_smallest: $font-size-base * 0.5;
$font_small: $font-size-base * 0.75;
$font_normal: $font-size-base * 1.0;
$font_big: $font-size-base * 1.25;
$font_biggest: $font-size-base * 1.5;

// assets
$viewIconUrl: url(https://www.dndbeyond.com/content/1-0-1836-0/skins/waterdeep/images/icons/sheet-icon-dark.svg);
$editIconUrl: url(https://www.dndbeyond.com/content/1-0-1836-0/skins/waterdeep/images/icons/menu_items/dark/builders.svg);

#gmstats {
    .hide {visibility: hidden;}

    background-color: $gm_background;
    color: $gm_primary_font_color;

    table {
        &.font_smallest { font-size: $font_smallest; }
        &.font_small { font-size: $font_small; }
        &.font_normal { font-size: $font_normal; }
        &.font_big { font-size: $font_big; }
        &.font_biggest { font-size: $font_biggest; }

        // stat column stuff
        &.stattable {
            background-color: $gm_background;
            color: $gm_primary_font_color;
            padding: 0;
            margin: 0;

            tr, th, td {
                border: 0 !important;
            }

            th {
                color: $gm_c_bright_black;
                
                &.stat_types {
                    position: relative;
                    text-align: center;
                    padding-bottom: 1em;
                }

                .statscore {color: $gm_primary_font_color;}

                .prof {color: $gm_c_cyan;}
            }
        }

        &.table th.col_stat {
            padding: 0 !important;
            margin: 0 !important;
        }

        &.table, &.stattable {
            th, td {
                &.col_stat {
                    width: 0%;
                    text-align: right;

                    color: $gm_c_bright_black;
                    .high {color: $gm_c_bright_white;}
                    .low {color: $gm_c_red;}
                    .prof {color: $gm_c_cyan;}

                    .stat {             
                        color: $gm_c_bright_white;          
                        bottom: .5em;
                        position: relative;
                        transform: rotate(-90deg);
                    }
                }
            }
        }
        // end stat column stuff
    
        &.table, &.stattable {
            color: $gm_primary_font_color;

            // monospace font for most formatting
            td,th {
                font-family: $font-family-monospace;
            }

            // let these be normal fonts to horizontal conserve space where possible
            tbody td, tfoot td {
                &.col_name .name, &.col_skills, &.col_languages {
                    font-family: $font-family-sans-serif !important;
                }
            }

            td,tr,th {
                &.hover_col {
                    background-color: $gm_background_hover_col;
                }
                &.hover_row {
                    // background-color: desaturate(darken($gm_c_bright_yellow, 55%), 50%);
                    td,th {
                        $border_color: desaturate(darken($gm_c_bright_yellow, 15%), 15%);
                        $border_settings: 1px dashed;
                        border-left: $border_settings $border_color;
                        border-right: $border_settings $border_color;
                        // border-color: $gm_c_red;

                        &.col_name {
                            .name {
                                color: $gm_c_bright_yellow;
                            }
                        }
                    }
                }
            }

            tbody tr {
                // character state in campaign; active, unassigned, deactivated
                &.active {
                    // currently unusued, just signifies that a character is active
                    // in the campaign
                }

                &.unassigned, &.deactivated {
                    color: $gm_inactive_cells !important;
                    td, td span {
                        color: $gm_inactive_cells !important;
                    }
                }

                // used for when a row is "expanded"
                &.active_row {
                    border-width: 2px;
                    border-color: $gm_c_bright_yellow;

                    td {
                        &.col_name {
                            .name {
                                color: $gm_c_bright_yellow;
                            }
                        }
                        &.col_skills {
                            span {
                                &.noprof {
                                    display: inline !important;
                                }
                            }
                        }
                    }
                }

                // when a row is hovered, and user goes over the name,
                // make it look clickable to toggle active_row
                &.hover_row {
                    td {
                        &.col_name {
                            .name {
                                &:hover {
                                    cursor: pointer;
                                    color: $gm_c_black !important;
                                    background-color: $gm_c_bright_yellow;
                                }
                            }
                        }
                    }
                }
            }

            hr {
                border: none;
                height: 1px;
                padding: 0;
                margin: 0;
                margin-top: 0.35em;
                margin-bottom: 0.35em;
            }

            .dropdown {
                color: $dark;
            }

            th {
                vertical-align: top;
                font-weight: normal;
            }

            th,td {
                width: 0%;
                white-space: nowrap;

                border: 1px solid $gm_table_border;

                &.col_name {
                    position: relative;
                    white-space: nowrap;
                    width: auto;

                    $linkiconsize: 1em;

                    .links {
                        position: absolute;
                        right: 0;

                        .view::before { background-image: $viewIconUrl; }
                        .edit::before { background-image: $editIconUrl; }

                        .view, .edit {
                            font-family: $font-family-sans-serif !important;
                            color: $gm_c_cyan;
                            text-decoration: none;

                            &::before {
                                content: '';
                                height: $linkiconsize;
                                width: $linkiconsize;
                                display: inline-block;
                                background-size: cover;
                                margin-right: 3px;
                            }
                            &:hover::before {
                                // https://stackoverflow.com/a/60167530
                                // https://codepen.io/sosuke/pen/Pjoqqp
                                filter: brightness(0) saturate(100%) invert(90%) sepia(22%) saturate(2579%) hue-rotate(349deg) brightness(91%) contrast(94%);
                            }
                        }
                    }
                    
                    .name {
                        margin-left: 0;
                        padding: 0.2em 0.2em 0.2em 0.1em;
                        
                        position: relative;
                        left: -0.25em;

                        font-weight: bold;
                        text-decoration: underline;
                        font-style: italic;
                    }

                    .inspiration {
                        padding-right: $linkiconsize*1.5;
                    }

                    .exhaust {
                        color: $gm_c_bright_black;

                        span { 
                            color: $gm_c_red; 
                        }
                    }

                    .spellsavedc {
                        color: $gm_c_bright_black;

                        .lvl {
                            font-weight: bold;
                            // color: $gm_level;
                        }

                        .dc {
                            font-weight: bold;
                            color: $gm_c_bright_white;
                        }
                    }
                }

                &.col_hp {
                    color: $gm_c_bright_black;

                    .overheal { color: $gm_hp_overheal; }
                    .good { color: $gm_hp_good; }
                    .hurt { color: $gm_hp_hurt; }
                    .bad { color: $gm_hp_bad; }
                    .normal { color: $gm_hp_normal; }

                    .fail, .save {font-weight: bold;}
                    .fail { color: $gm_c_red; }
                    .save { color: $gm_c_green; }
                    .stable { color: $gm_c_green; }
                }

                &.col_ac {
                    width: 0%;

                    .init {
                        font-family: $font-family-sans-serif !important;

                        position: relative;
                        width: 1em;
                        // top: -0.25em;
                        top: 2.7em;
                        transform: rotate(-90deg);
                    }
                }

                &.col_speed {
                    color: $gm_c_bright_black;

                    span {
                        color: $gm_c_bright_white;
                    }
                }

                &.col_passives {
                    span {color: $gm_c_bright_yellow;}
                }

                &.col_money {
                    width: auto;
                    color: $gm_c_bright_black;
                    white-space: normal;
                    
                    .cp {color: $gm_money_cp;}
                    .sp {color: $gm_money_sp;}
                    .gp {color: $gm_money_gp;}
                    .ep {color: $gm_money_ep;}
                    .pp {color: $gm_money_pp;}

                    .total span, .gponly {
                        color: $gm_c_green;// $gm_money_gp;
                    }

                    .total, .ppc, .epc, .gpc, .spc, .cpc {
                        white-space: nowrap;
                    }
                }

                &.col_skills {
                    // font-family: $font-family-sans-serif;
                    width: auto;
                    white-space: normal;
                    
                    span {
                        white-space: normal;
                        span.value {
                            white-space: normal;
                            font-family: $font-family-monospace;
                        }

                        &.normal {
                            color: $gm_c_bright_black;
                            span.value {
                                color: $gm_c_bright_black;
                            }
                        }
                        &.high {
                            span.value {
                                color: $gm_c_light_steel_blue;
                            }
                        }
                        &.low {
                            span.value {
                                color: $gm_c_red;
                            }
                        }

                        &.prof {
                            color: $gm_c_bright_white;
                        }
                        &.expert {
                            color: $gm_c_bright_yellow;
                        }
                        &.halfprof {
                            color: $gm_c_silver;
                        }
                        &.noprof {
                            color: $gm_c_bright_black;
                            display: none;
                        }
                        &.custom {
                            font-style: italic;
                        }

                        // add commas
                        &.c:not(:last-child):after {
                            color: $gm_c_bright_white !important;
                            content: ',';
                        }

                        // This is probably the better option but doesn't really seem to work :( 
                        // https://css-tricks.com/how-to-add-commas-between-a-list-of-items-dynamically-with-css/
                        // https://stackoverflow.com/questions/47308060/how-to-use-tilde-in-css-correctly-in-structure
                        // &.c ~ .c {
                        //     &:after {
                        //         color: $gm_c_bright_black !important;
                        //         content: ',';
                        //     }
                        // }

                    }

                    // more white-space settings below specifically for tbody td
                }

                &.col_languages {
                    width: auto;
                    white-space: normal;

                    span {white-space: nowrap;}
                }
            }

            td.col_skills span { white-space: nowrap; }

            tfoot {
                td {
                    &.col_name {
                        vertical-align: middle;
                        text-align: right;
                    }
                }
            }
        }
    }
}

/* ----------------------------------------------------------------------------------------------------------------- */
/* ----------------------------------------------------------------------------------------------------------------- */
/* ----------------------------------------------------------------------------------------------------------------- */
